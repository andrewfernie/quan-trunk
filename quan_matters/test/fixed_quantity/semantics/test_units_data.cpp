// Copyright Andrew Little 2005

// See QUAN_ROOT/quan_matters/index.html for documentation.

/*
    compare all known units with expected
*/

#include <quan_matters/test/simple_test.hpp>
#include <quan/out/all_types.hpp>
#include <iostream>

void test_units_data()
{

    QUAN_CHECK(units_str(quan::circulation::zm2_per_s()) == "zm2.s-1");
    QUAN_CHECK(units_str(quan::circulation::am2_per_s()) == "am2.s-1");
    QUAN_CHECK(units_str(quan::circulation::fm2_per_s()) == "fm2.s-1");
    QUAN_CHECK(units_str(quan::circulation::pm2_per_s()) == "pm2.s-1");
    QUAN_CHECK(units_str(quan::circulation::nm2_per_s()) == "nm2.s-1");
    QUAN_CHECK(units_str(quan::circulation::um2_per_s()) == "um2.s-1");
    QUAN_CHECK(units_str(quan::circulation::mm2_per_s()) == "mm2.s-1");
    QUAN_CHECK(units_str(quan::circulation::cm2_per_s()) == "cm2.s-1");
    QUAN_CHECK(units_str(quan::circulation::dm2_per_s()) == "dm2.s-1");
    QUAN_CHECK(units_str(quan::circulation::m2_per_s()) == "m2.s-1");
    QUAN_CHECK(units_str(quan::circulation::dam2_per_s()) == "dam2.s-1");
    QUAN_CHECK(units_str(quan::circulation::hm2_per_s()) == "hm2.s-1");
    QUAN_CHECK(units_str(quan::circulation::km2_per_s()) == "km2.s-1");
    QUAN_CHECK(units_str(quan::circulation::Mm2_per_s()) == "Mm2.s-1");
    QUAN_CHECK(units_str(quan::circulation::Gm2_per_s()) == "Gm2.s-1");
    QUAN_CHECK(units_str(quan::circulation::Tm2_per_s()) == "Tm2.s-1");
    QUAN_CHECK(units_str(quan::circulation::Pm2_per_s()) == "Pm2.s-1");
    QUAN_CHECK(units_str(quan::circulation::Em2_per_s()) == "Em2.s-1");
    QUAN_CHECK(units_str(quan::circulation::Zm2_per_s()) == "Zm2.s-1");

    QUAN_CHECK(units_str(quan::conductance::yS()) == "yS");
    QUAN_CHECK(units_str(quan::conductance::zS()) == "zS");
    QUAN_CHECK(units_str(quan::conductance::aS()) == "aS");
    QUAN_CHECK(units_str(quan::conductance::fS()) == "fS");
    QUAN_CHECK(units_str(quan::conductance::pS()) == "pS");
    QUAN_CHECK(units_str(quan::conductance::nS()) == "nS");
    QUAN_CHECK(units_str(quan::conductance::uS()) == "uS");
    QUAN_CHECK(units_str(quan::conductance::mS()) == "mS");
    QUAN_CHECK(units_str(quan::conductance::cS()) == "cS");
    QUAN_CHECK(units_str(quan::conductance::dS()) == "dS");
    QUAN_CHECK(units_str(quan::conductance::S()) == "S");
    QUAN_CHECK(units_str(quan::conductance::daS()) == "daS");
    QUAN_CHECK(units_str(quan::conductance::hS()) == "hS");
    QUAN_CHECK(units_str(quan::conductance::kS()) == "kS");
    QUAN_CHECK(units_str(quan::conductance::MS()) == "MS");
    QUAN_CHECK(units_str(quan::conductance::GS()) == "GS");
    QUAN_CHECK(units_str(quan::conductance::TS()) == "TS");
    QUAN_CHECK(units_str(quan::conductance::PS()) == "PS");
    QUAN_CHECK(units_str(quan::conductance::ES()) == "ES");
    QUAN_CHECK(units_str(quan::conductance::ZS()) == "ZS");
    QUAN_CHECK(units_str(quan::density::yg_per_m3()) == "yg.m-3");
    QUAN_CHECK(units_str(quan::density::zg_per_m3()) == "zg.m-3");
    QUAN_CHECK(units_str(quan::density::ag_per_m3()) == "ag.m-3");
    QUAN_CHECK(units_str(quan::density::fg_per_m3()) == "fg.m-3");
    QUAN_CHECK(units_str(quan::density::pg_per_m3()) == "pg.m-3");
    QUAN_CHECK(units_str(quan::density::ng_per_m3()) == "ng.m-3");
    QUAN_CHECK(units_str(quan::density::ug_per_m3()) == "ug.m-3");
    QUAN_CHECK(units_str(quan::density::mg_per_m3()) == "mg.m-3");
    QUAN_CHECK(units_str(quan::density::cg_per_m3()) == "cg.m-3");
    QUAN_CHECK(units_str(quan::density::dg_per_m3()) == "dg.m-3");
    QUAN_CHECK(units_str(quan::density::dag_per_m3()) == "dag.m-3");
    QUAN_CHECK(units_str(quan::density::hg_per_m3()) == "hg.m-3");
    QUAN_CHECK(units_str(quan::density::kg_per_m3()) == "kg.m-3");
    QUAN_CHECK(units_str(quan::density::Mg_per_m3()) == "Mg.m-3");
    QUAN_CHECK(units_str(quan::density::Gg_per_m3()) == "Gg.m-3");
    QUAN_CHECK(units_str(quan::density::Tg_per_m3()) == "Tg.m-3");
    QUAN_CHECK(units_str(quan::density::Pg_per_m3()) == "Pg.m-3");
    QUAN_CHECK(units_str(quan::density::Eg_per_m3()) == "Eg.m-3");
    QUAN_CHECK(units_str(quan::density::Zg_per_m3()) == "Zg.m-3");
    QUAN_CHECK(units_str(quan::energy::zJ()) == "zJ");
    QUAN_CHECK(units_str(quan::energy::aJ()) == "aJ");
    QUAN_CHECK(units_str(quan::energy::fJ()) == "fJ");
    QUAN_CHECK(units_str(quan::energy::pJ()) == "pJ");
    QUAN_CHECK(units_str(quan::energy::nJ()) == "nJ");
    QUAN_CHECK(units_str(quan::energy::uJ()) == "uJ");
    QUAN_CHECK(units_str(quan::energy::mJ()) == "mJ");
    QUAN_CHECK(units_str(quan::energy::J()) == "J");
    QUAN_CHECK(units_str(quan::energy::daJ()) == "daJ");
    QUAN_CHECK(units_str(quan::energy::hJ()) == "hJ");
    QUAN_CHECK(units_str(quan::energy::kJ()) == "kJ");
    QUAN_CHECK(units_str(quan::energy::MJ()) == "MJ");
    QUAN_CHECK(units_str(quan::energy::GJ()) == "GJ");
    QUAN_CHECK(units_str(quan::energy::TJ()) == "TJ");
    QUAN_CHECK(units_str(quan::energy::PJ()) == "PJ");
    QUAN_CHECK(units_str(quan::energy::EJ()) == "EJ");
    QUAN_CHECK(units_str(quan::energy::ZJ()) == "ZJ");
    QUAN_CHECK(units_str(quan::frequency::yHz()) == "yHz");
    QUAN_CHECK(units_str(quan::frequency::zHz()) == "zHz");
    QUAN_CHECK(units_str(quan::frequency::aHz()) == "aHz");
    QUAN_CHECK(units_str(quan::frequency::fHz()) == "fHz");
    QUAN_CHECK(units_str(quan::frequency::pHz()) == "pHz");
    QUAN_CHECK(units_str(quan::frequency::nHz()) == "nHz");
    QUAN_CHECK(units_str(quan::frequency::uHz()) == "uHz");
    QUAN_CHECK(units_str(quan::frequency::mHz()) == "mHz");
    QUAN_CHECK(units_str(quan::frequency::cHz()) == "cHz");
    QUAN_CHECK(units_str(quan::frequency::dHz()) == "dHz");
    QUAN_CHECK(units_str(quan::frequency::Hz()) == "Hz");
    QUAN_CHECK(units_str(quan::frequency::daHz()) == "daHz");
    QUAN_CHECK(units_str(quan::frequency::hHz()) == "hHz");
    QUAN_CHECK(units_str(quan::frequency::kHz()) == "kHz");
    QUAN_CHECK(units_str(quan::frequency::MHz()) == "MHz");
    QUAN_CHECK(units_str(quan::frequency::GHz()) == "GHz");
    QUAN_CHECK(units_str(quan::frequency::THz()) == "THz");
    QUAN_CHECK(units_str(quan::frequency::PHz()) == "PHz");
    QUAN_CHECK(units_str(quan::frequency::EHz()) == "EHz");
    QUAN_CHECK(units_str(quan::frequency::ZHz()) == "ZHz");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_ys()) == "ys-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_zs()) == "zs-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_as()) == "as-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_fs()) == "fs-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_ps()) == "ps-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_ns()) == "ns-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_us()) == "us-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_ms()) == "ms-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_cs()) == "cs-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_ds()) == "ds-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_s()) == "s-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_das()) == "das-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_hs()) == "hs-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_ks()) == "ks-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_Ms()) == "Ms-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_Gs()) == "Gs-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_Ts()) == "Ts-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_Ps()) == "Ps-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_Es()) == "Es-1");
    QUAN_CHECK(units_str(quan::reciprocal_time::per_Zs()) == "Zs-1");
    QUAN_CHECK(units_str(quan::inductance::yH()) == "yH");
    QUAN_CHECK(units_str(quan::inductance::zH()) == "zH");
    QUAN_CHECK(units_str(quan::inductance::aH()) == "aH");
    QUAN_CHECK(units_str(quan::inductance::fH()) == "fH");
    QUAN_CHECK(units_str(quan::inductance::pH()) == "pH");
    QUAN_CHECK(units_str(quan::inductance::nH()) == "nH");
    QUAN_CHECK(units_str(quan::inductance::uH()) == "uH");
    QUAN_CHECK(units_str(quan::inductance::mH()) == "mH");
    QUAN_CHECK(units_str(quan::inductance::cH()) == "cH");
    QUAN_CHECK(units_str(quan::inductance::dH()) == "dH");
    QUAN_CHECK(units_str(quan::inductance::H()) == "H");
    QUAN_CHECK(units_str(quan::inductance::daH()) == "daH");
    QUAN_CHECK(units_str(quan::inductance::hH()) == "hH");
    QUAN_CHECK(units_str(quan::inductance::kH()) == "kH");
    QUAN_CHECK(units_str(quan::inductance::MH()) == "MH");
    QUAN_CHECK(units_str(quan::inductance::GH()) == "GH");
    QUAN_CHECK(units_str(quan::inductance::TH()) == "TH");
    QUAN_CHECK(units_str(quan::inductance::PH()) == "PH");
    QUAN_CHECK(units_str(quan::inductance::EH()) == "EH");
    QUAN_CHECK(units_str(quan::inductance::ZH()) == "ZH");
    QUAN_CHECK(units_str(quan::inductance::abhenry()) == "abhenry");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::yA_per_m()) == "yA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::zA_per_m()) == "zA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::aA_per_m()) == "aA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::fA_per_m()) == "fA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::pA_per_m()) == "pA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::nA_per_m()) == "nA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::uA_per_m()) == "uA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::mA_per_m()) == "mA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::cA_per_m()) == "cA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::dA_per_m()) == "dA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::A_per_m()) == "A.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::daA_per_m()) == "daA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::hA_per_m()) == "hA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::kA_per_m()) == "kA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::MA_per_m()) == "MA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::GA_per_m()) == "GA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::TA_per_m()) == "TA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::PA_per_m()) == "PA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::EA_per_m()) == "EA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_field_strength::ZA_per_m()) == "ZA.m-1");
    QUAN_CHECK(units_str(quan::magnetic_flux::yWb()) == "yWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::zWb()) == "zWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::aWb()) == "aWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::fWb()) == "fWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::pWb()) == "pWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::nWb()) == "nWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::uWb()) == "uWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::mWb()) == "mWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::cWb()) == "cWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::dWb()) == "dWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::Wb()) == "Wb");
    QUAN_CHECK(units_str(quan::magnetic_flux::daWb()) == "daWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::hWb()) == "hWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::kWb()) == "kWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::MWb()) == "MWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::GWb()) == "GWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::TWb()) == "TWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::PWb()) == "PWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::EWb()) == "EWb");
    QUAN_CHECK(units_str(quan::magnetic_flux::ZWb()) == "ZWb");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::yT()) == "yT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::zT()) == "zT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::aT()) == "aT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::fT()) == "fT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::pT()) == "pT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::nT()) == "nT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::uT()) == "uT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::mT()) == "mT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::cT()) == "cT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::dT()) == "dT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::T()) == "T");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::daT()) == "daT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::hT()) == "hT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::kT()) == "kT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::MT()) == "MT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::GT()) == "GT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::TT()) == "TT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::PT()) == "PT");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::ET()) == "ET");
    QUAN_CHECK(units_str(quan::magnetic_flux_density::ZT()) == "ZT");
    QUAN_CHECK(units_str(quan::magnetomotive_force::yA()) == "yA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::zA()) == "zA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::aA()) == "aA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::fA()) == "fA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::pA()) == "pA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::nA()) == "nA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::uA()) == "uA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::mA()) == "mA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::cA()) == "cA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::dA()) == "dA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::A()) == "A");
    QUAN_CHECK(units_str(quan::magnetomotive_force::daA()) == "daA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::hA()) == "hA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::kA()) == "kA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::MA()) == "MA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::GA()) == "GA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::TA()) == "TA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::PA()) == "PA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::EA()) == "EA");
    QUAN_CHECK(units_str(quan::magnetomotive_force::ZA()) == "ZA");
    QUAN_CHECK(units_str(quan::mass_flow::zg_per_s()) == "zg.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::ag_per_s()) == "ag.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::fg_per_s()) == "fg.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::pg_per_s()) == "pg.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::ng_per_s()) == "ng.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::ug_per_s()) == "ug.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::mg_per_s()) == "mg.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::g_per_s()) == "g.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::dag_per_s()) == "dag.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::hg_per_s()) == "hg.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::kg_per_s()) == "kg.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::Mg_per_s()) == "Mg.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::Gg_per_s()) == "Gg.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::Tg_per_s()) == "Tg.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::Pg_per_s()) == "Pg.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::Eg_per_s()) == "Eg.s-1");
    QUAN_CHECK(units_str(quan::mass_flow::Zg_per_s()) == "Zg.s-1");
    QUAN_CHECK(units_str(quan::power::yW()) == "yW");
    QUAN_CHECK(units_str(quan::power::zW()) == "zW");
    QUAN_CHECK(units_str(quan::power::aW()) == "aW");
    QUAN_CHECK(units_str(quan::power::fW()) == "fW");
    QUAN_CHECK(units_str(quan::power::pW()) == "pW");
    QUAN_CHECK(units_str(quan::power::nW()) == "nW");
    QUAN_CHECK(units_str(quan::power::uW()) == "uW");
    QUAN_CHECK(units_str(quan::power::mW()) == "mW");
    QUAN_CHECK(units_str(quan::power::cW()) == "cW");
    QUAN_CHECK(units_str(quan::power::dW()) == "dW");
    QUAN_CHECK(units_str(quan::power::W()) == "W");
    QUAN_CHECK(units_str(quan::power::daW()) == "daW");
    QUAN_CHECK(units_str(quan::power::hW()) == "hW");
    QUAN_CHECK(units_str(quan::power::kW()) == "kW");
    QUAN_CHECK(units_str(quan::power::MW()) == "MW");
    QUAN_CHECK(units_str(quan::power::GW()) == "GW");
    QUAN_CHECK(units_str(quan::power::TW()) == "TW");
    QUAN_CHECK(units_str(quan::power::PW()) == "PW");
    QUAN_CHECK(units_str(quan::power::EW()) == "EW");
    QUAN_CHECK(units_str(quan::power::ZW()) == "ZW");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_zg()) == "zg-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_ag()) == "ag-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_fg()) == "fg-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_pg()) == "pg-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_ng()) == "ng-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_ug()) == "ug-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_mg()) == "mg-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_g()) == "g-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_dag()) == "dag-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_hg()) == "hg-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_kg()) == "kg-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_Mg()) == "Mg-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_Gg()) == "Gg-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_Tg()) == "Tg-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_Pg()) == "Pg-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_Eg()) == "Eg-1");
    QUAN_CHECK(units_str(quan::reciprocal_mass::per_Zg()) == "Zg-1");
    QUAN_CHECK(units_str(quan::resistance::yR()) == "yR");
    QUAN_CHECK(units_str(quan::resistance::zR()) == "zR");
    QUAN_CHECK(units_str(quan::resistance::aR()) == "aR");
    QUAN_CHECK(units_str(quan::resistance::fR()) == "fR");
    QUAN_CHECK(units_str(quan::resistance::pR()) == "pR");
    QUAN_CHECK(units_str(quan::resistance::nR()) == "nR");
    QUAN_CHECK(units_str(quan::resistance::uR()) == "uR");
    QUAN_CHECK(units_str(quan::resistance::mR()) == "mR");
    QUAN_CHECK(units_str(quan::resistance::cR()) == "cR");
    QUAN_CHECK(units_str(quan::resistance::dR()) == "dR");
    QUAN_CHECK(units_str(quan::resistance::R()) == "R");
    QUAN_CHECK(units_str(quan::resistance::daR()) == "daR");
    QUAN_CHECK(units_str(quan::resistance::hR()) == "hR");
    QUAN_CHECK(units_str(quan::resistance::kR()) == "kR");
    QUAN_CHECK(units_str(quan::resistance::MR()) == "MR");
    QUAN_CHECK(units_str(quan::resistance::GR()) == "GR");
    QUAN_CHECK(units_str(quan::resistance::TR()) == "TR");
    QUAN_CHECK(units_str(quan::resistance::PR()) == "PR");
    QUAN_CHECK(units_str(quan::resistance::ER()) == "ER");
    QUAN_CHECK(units_str(quan::resistance::ZR()) == "ZR");
    QUAN_CHECK(units_str(quan::resistance::abohm()) == "abohm");
    QUAN_CHECK(units_str(quan::magnetic_permeability::yH_per_m()) == "yH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::zH_per_m()) == "zH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::aH_per_m()) == "aH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::fH_per_m()) == "fH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::pH_per_m()) == "pH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::nH_per_m()) == "nH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::uH_per_m()) == "uH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::mH_per_m()) == "mH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::cH_per_m()) == "cH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::dH_per_m()) == "dH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::H_per_m()) == "H.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::daH_per_m()) == "daH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::hH_per_m()) == "hH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::kH_per_m()) == "kH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::MH_per_m()) == "MH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::GH_per_m()) == "GH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::TH_per_m()) == "TH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::PH_per_m()) == "PH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::EH_per_m()) == "EH.m-1");
    QUAN_CHECK(units_str(quan::magnetic_permeability::ZH_per_m()) == "ZH.m-1");
    QUAN_CHECK(units_str(quan::torque::yN_m()) == "yN.m");
    QUAN_CHECK(units_str(quan::torque::zN_m()) == "zN.m");
    QUAN_CHECK(units_str(quan::torque::aN_m()) == "aN.m");
    QUAN_CHECK(units_str(quan::torque::fN_m()) == "fN.m");
    QUAN_CHECK(units_str(quan::torque::pN_m()) == "pN.m");
    QUAN_CHECK(units_str(quan::torque::nN_m()) == "nN.m");
    QUAN_CHECK(units_str(quan::torque::uN_m()) == "uN.m");
    QUAN_CHECK(units_str(quan::torque::mN_m()) == "mN.m");
    QUAN_CHECK(units_str(quan::torque::cN_m()) == "cN.m");
    QUAN_CHECK(units_str(quan::torque::dN_m()) == "dN.m");
    QUAN_CHECK(units_str(quan::torque::N_m()) == "N.m");
    QUAN_CHECK(units_str(quan::torque::daN_m()) == "daN.m");
    QUAN_CHECK(units_str(quan::torque::hN_m()) == "hN.m");
    QUAN_CHECK(units_str(quan::torque::kN_m()) == "kN.m");
    QUAN_CHECK(units_str(quan::torque::MN_m()) == "MN.m");
    QUAN_CHECK(units_str(quan::torque::GN_m()) == "GN.m");
    QUAN_CHECK(units_str(quan::torque::TN_m()) == "TN.m");
    QUAN_CHECK(units_str(quan::torque::PN_m()) == "PN.m");
    QUAN_CHECK(units_str(quan::torque::EN_m()) == "EN.m");
    QUAN_CHECK(units_str(quan::torque::ZN_m()) == "ZN.m");
    QUAN_CHECK(units_str(quan::voltage::yV()) == "yV");
    QUAN_CHECK(units_str(quan::voltage::zV()) == "zV");
    QUAN_CHECK(units_str(quan::voltage::aV()) == "aV");
    QUAN_CHECK(units_str(quan::voltage::fV()) == "fV");
    QUAN_CHECK(units_str(quan::voltage::pV()) == "pV");
    QUAN_CHECK(units_str(quan::voltage::nV()) == "nV");
    QUAN_CHECK(units_str(quan::voltage::uV()) == "uV");
    QUAN_CHECK(units_str(quan::voltage::mV()) == "mV");
    QUAN_CHECK(units_str(quan::voltage::cV()) == "cV");
    QUAN_CHECK(units_str(quan::voltage::dV()) == "dV");
    QUAN_CHECK(units_str(quan::voltage::V()) == "V");
    QUAN_CHECK(units_str(quan::voltage::daV()) == "daV");
    QUAN_CHECK(units_str(quan::voltage::hV()) == "hV");
    QUAN_CHECK(units_str(quan::voltage::kV()) == "kV");
    QUAN_CHECK(units_str(quan::voltage::MV()) == "MV");
    QUAN_CHECK(units_str(quan::voltage::GV()) == "GV");
    QUAN_CHECK(units_str(quan::voltage::TV()) == "TV");
    QUAN_CHECK(units_str(quan::voltage::PV()) == "PV");
    QUAN_CHECK(units_str(quan::voltage::EV()) == "EV");
    QUAN_CHECK(units_str(quan::voltage::ZV()) == "ZV");
    QUAN_CHECK(units_str(quan::voltage::abvolt()) == "abvolt");
    QUAN_CHECK(units_str(quan::potential_difference::yV()) == "yV");
    QUAN_CHECK(units_str(quan::potential_difference::zV()) == "zV");
    QUAN_CHECK(units_str(quan::potential_difference::aV()) == "aV");
    QUAN_CHECK(units_str(quan::potential_difference::fV()) == "fV");
    QUAN_CHECK(units_str(quan::potential_difference::pV()) == "pV");
    QUAN_CHECK(units_str(quan::potential_difference::nV()) == "nV");
    QUAN_CHECK(units_str(quan::potential_difference::uV()) == "uV");
    QUAN_CHECK(units_str(quan::potential_difference::mV()) == "mV");
    QUAN_CHECK(units_str(quan::potential_difference::cV()) == "cV");
    QUAN_CHECK(units_str(quan::potential_difference::dV()) == "dV");
    QUAN_CHECK(units_str(quan::potential_difference::V()) == "V");
    QUAN_CHECK(units_str(quan::potential_difference::daV()) == "daV");
    QUAN_CHECK(units_str(quan::potential_difference::hV()) == "hV");
    QUAN_CHECK(units_str(quan::potential_difference::kV()) == "kV");
    QUAN_CHECK(units_str(quan::potential_difference::MV()) == "MV");
    QUAN_CHECK(units_str(quan::potential_difference::GV()) == "GV");
    QUAN_CHECK(units_str(quan::potential_difference::TV()) == "TV");
    QUAN_CHECK(units_str(quan::potential_difference::PV()) == "PV");
    QUAN_CHECK(units_str(quan::potential_difference::EV()) == "EV");
    QUAN_CHECK(units_str(quan::potential_difference::ZV()) == "ZV");
    QUAN_CHECK(units_str(quan::pressure::yPa()) == "yPa");
    QUAN_CHECK(units_str(quan::pressure::zPa()) == "zPa");
    QUAN_CHECK(units_str(quan::pressure::aPa()) == "aPa");
    QUAN_CHECK(units_str(quan::pressure::fPa()) == "fPa");
    QUAN_CHECK(units_str(quan::pressure::pPa()) == "pPa");
    QUAN_CHECK(units_str(quan::pressure::nPa()) == "nPa");
    QUAN_CHECK(units_str(quan::pressure::uPa()) == "uPa");
    QUAN_CHECK(units_str(quan::pressure::mPa()) == "mPa");
    QUAN_CHECK(units_str(quan::pressure::cPa()) == "cPa");
    QUAN_CHECK(units_str(quan::pressure::dPa()) == "dPa");
    QUAN_CHECK(units_str(quan::pressure::Pa()) == "Pa");
    QUAN_CHECK(units_str(quan::pressure::daPa()) == "daPa");
    QUAN_CHECK(units_str(quan::pressure::hPa()) == "hPa");
    QUAN_CHECK(units_str(quan::pressure::kPa()) == "kPa");
    QUAN_CHECK(units_str(quan::pressure::MPa()) == "MPa");
    QUAN_CHECK(units_str(quan::pressure::GPa()) == "GPa");
    QUAN_CHECK(units_str(quan::pressure::TPa()) == "TPa");
    QUAN_CHECK(units_str(quan::pressure::PPa()) == "PPa");
    QUAN_CHECK(units_str(quan::pressure::EPa()) == "EPa");
    QUAN_CHECK(units_str(quan::pressure::ZPa()) == "ZPa");
    QUAN_CHECK(units_str(quan::pressure::atm()) == "atm");
    QUAN_CHECK(units_str(quan::pressure::at()) == "at");
    QUAN_CHECK(units_str(quan::pressure::bar()) == "bar");
    QUAN_CHECK(units_str(quan::pressure::cm_mercury0C()) == "cm mercury (0 deg C)");
    QUAN_CHECK(units_str(quan::pressure::cmHg()) == "cmHg");
    QUAN_CHECK(units_str(quan::pressure::cm_water4C()) == "cm water (4 deg C)");
    QUAN_CHECK(units_str(quan::pressure::cmH20()) == "cmH20");
    QUAN_CHECK(units_str(quan::pressure::dyn_per_cm2()) == "dyn.cm-2");
    QUAN_CHECK(units_str(quan::pressure::ftHg()) == "ftHg");
    QUAN_CHECK(units_str(quan::pressure::ft_water39_2F()) == "ft water (39.2 deg F)");
    QUAN_CHECK(units_str(quan::pressure::ftH20()) == "ftH20");
    QUAN_CHECK(units_str(quan::pressure::gf_per_cm2()) == "gf.cm-2");
    QUAN_CHECK(units_str(quan::pressure::in_mercury32F()) == "in mercury (32 deg F)");
    QUAN_CHECK(units_str(quan::pressure::in_mercury60F()) == "in mercury (60 deg F)");
    QUAN_CHECK(units_str(quan::pressure::inHg()) == "inHg");
    QUAN_CHECK(units_str(quan::pressure::in_water39_2F()) == "in water (39.2 deg F)");
    QUAN_CHECK(units_str(quan::pressure::inH20()) == "inH20");
    QUAN_CHECK(units_str(quan::pressure::kgf_per_cm2()) == "kgf.cm-2");
    QUAN_CHECK(units_str(quan::pressure::kgf_per_m2()) == "kgf.m-2");
    QUAN_CHECK(units_str(quan::pressure::kgf_per_mm2()) == "kgf.mm-2");
    QUAN_CHECK(units_str(quan::pressure::ksi()) == "ksi");
    QUAN_CHECK(units_str(quan::pressure::mbar()) == "mbar");
    QUAN_CHECK(units_str(quan::pressure::mmHg()) == "mmHg");
    QUAN_CHECK(units_str(quan::pressure::mmH20()) == "mmH20");
    QUAN_CHECK(units_str(quan::pressure::lbf_per_ft2()) == "lbf.ft-2");
    QUAN_CHECK(units_str(quan::pressure::psi()) == "psi");
    QUAN_CHECK(units_str(quan::pressure::poundal_per_ft2()) == "poundal.ft-2");
    QUAN_CHECK(units_str(quan::pressure::torr()) == "Torr");
    QUAN_CHECK(units_str(quan::velocity::ym_per_s()) == "ym.s-1");
    QUAN_CHECK(units_str(quan::velocity::zm_per_s()) == "zm.s-1");
    QUAN_CHECK(units_str(quan::velocity::am_per_s()) == "am.s-1");
    QUAN_CHECK(units_str(quan::velocity::fm_per_s()) == "fm.s-1");
    QUAN_CHECK(units_str(quan::velocity::pm_per_s()) == "pm.s-1");
    QUAN_CHECK(units_str(quan::velocity::nm_per_s()) == "nm.s-1");
    QUAN_CHECK(units_str(quan::velocity::um_per_s()) == "um.s-1");
    QUAN_CHECK(units_str(quan::velocity::mm_per_s()) == "mm.s-1");
    QUAN_CHECK(units_str(quan::velocity::cm_per_s()) == "cm.s-1");
    QUAN_CHECK(units_str(quan::velocity::dm_per_s()) == "dm.s-1");
    QUAN_CHECK(units_str(quan::velocity::m_per_s()) == "m.s-1");
    QUAN_CHECK(units_str(quan::velocity::dam_per_s()) == "dam.s-1");
    QUAN_CHECK(units_str(quan::velocity::hm_per_s()) == "hm.s-1");
    QUAN_CHECK(units_str(quan::velocity::km_per_s()) == "km.s-1");
    QUAN_CHECK(units_str(quan::velocity::Mm_per_s()) == "Mm.s-1");
    QUAN_CHECK(units_str(quan::velocity::Gm_per_s()) == "Gm.s-1");
    QUAN_CHECK(units_str(quan::velocity::Tm_per_s()) == "Tm.s-1");
    QUAN_CHECK(units_str(quan::velocity::Pm_per_s()) == "Pm.s-1");
    QUAN_CHECK(units_str(quan::velocity::Em_per_s()) == "Em.s-1");
    QUAN_CHECK(units_str(quan::velocity::Zm_per_s()) == "Zm.s-1");
    QUAN_CHECK(units_str(quan::velocity::ft_per_h()) == "ft.h-1");
    QUAN_CHECK(units_str(quan::velocity::ft_per_min()) == "ft.min-1");
    QUAN_CHECK(units_str(quan::velocity::ft_per_s()) == "ft.s-1");
    QUAN_CHECK(units_str(quan::velocity::in_per_s()) == "in.s-1");
    QUAN_CHECK(units_str(quan::velocity::km_per_h()) == "km.h-1");
    QUAN_CHECK(units_str(quan::velocity::knot()) == "knot");
    QUAN_CHECK(units_str(quan::velocity::mi_per_h()) == "mi.h-1");
    QUAN_CHECK(units_str(quan::velocity::mi_per_min()) == "mi.min-1");
    QUAN_CHECK(units_str(quan::velocity::mi_per_s()) == "mi.s-1");
    QUAN_CHECK(units_str(quan::velocity::mm_per_min()) == "mm.min-1");
  
}
